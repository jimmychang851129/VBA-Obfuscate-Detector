Filename     : ./macros/5389463f8738d6009b7c534d6755370588ff12d83b9a870ede2d178bca3fb1e4
OLE stream   : _VBA_PROJECT_CUR/VBA/Mod_regkey
VBA filename : Mod_regkey.bas
----------------------------------------
Attribute VB_Name = "Mod_regkey"
#If VBA7 Then
    Private Declare PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As LongPtr) As LongPtr
    Public Declare PtrSafe Function GetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As LongPtr) As LongPtr
    Private Type BROWSEINFO  ' Duoc su dung boi ham GetFolderName'
        hOwner As LongPtr:                               pidlRoot As LongPtr
        pszDisplayName As String:                   lpszTitle As String
        ulFlags As LongPtr:                                 lpfn As LongPtr
        lParam As LongPtr:                                iImage As LongPtr
    End Type
    Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long
    Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32.dll" Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long
#Else
    Private Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
    Public Declare Function GetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As Long) As Long
    Private Type BROWSEINFO  ' Duoc su dung boi ham GetFolderName'
        hOwner As Long:                               pidlRoot As Long
        pszDisplayName As String:                   lpszTitle As String
        ulFlags As Long:                                 lpfn As Long
        lParam As Long:                                iImage As Long
    End Type
    Private Declare Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long
    Private Declare Function SHBrowseForFolder Lib "shell32.dll" Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long
#End If

'===== Reading from the Registry:
Function RegKeyRead(i_RegKey As String) As String
If RegKeyExists(i_RegKey) = True Then
    Dim myWS As Object
      On Error Resume Next
      Set myWS = CreateObject("WScript.Shell")
      RegKeyRead = myWS.RegRead(i_RegKey)
Else
    RegKeyRead = ""
End If
End Function


'=====Checking if a Registry key exists
Function RegKeyExists(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegRead i_RegKey
  RegKeyExists = True
  Exit Function
ErrorHandler:
  RegKeyExists = False
End Function
'======Saving a Registry key:
Sub RegKeySave(i_RegKey As String, _
               i_Value As String, _
      Optional i_Type As String = "REG_SZ")
Dim myWS As Object
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegWrite i_RegKey, i_Value, i_Type
End Sub
'===Deleting a key from the Registry:
Function RegKeyDelete(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegDelete i_RegKey
  RegKeyDelete = True
  Exit Function
ErrorHandler:
  RegKeyDelete = False
End Function

Function GetSh()                                                        '- Lay danh sach sheet
  Dim Temp()
  ActiveWorkbook.Names.Add String(240, "z"), "=SUBSTITUTE(GET.WORKBOOK(1),""[""&GET.WORKBOOK(16)&""]"","""")"
  'Lay ten cua workbook add vao
  Temp = Evaluate("Transpose(" & String(240, "z") & ")")
  Temp = WorksheetFunction.Transpose(Temp)
  ActiveWorkbook.Names(String(240, "z")).Delete
  GetSh = Temp
End Function
Public Function Get_FileName(duongdan As String) As String
Dim i As Long, namefile1 As String
Dim lenName As Long
For i = Len(duongdan) To 1 Step -1
   namefile1 = Mid(duongdan, i, 1)
   If namefile1 = "\" Then
    lenName = i
    Exit For
   End If
Next
Get_FileName = Mid(duongdan, lenName + 1, Len(duongdan) - lenName)

End Function
Function Xoa_Folder(duongdan As String, Tenfile As String)
If Right(duongdan, 1) = "\" Then duongdan = duongdan & "\"
Tenfile = Dir(duongdan, vbNormal)
Do While Tenfile <> ""
    Kill duongdan & Tenfile
    Tenfile = Dir
Loop
RmDir duongdan
End Function
Function get_Extentfile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Extentfile = Mid(Tenfile, i, Len(Tenfile) - i + 1)
        Exit For
    End If
Next
End Function
Function get_Foldername_ofpath(path As String) As String
Dim i As Long, TEN As String
For i = Len(path) To 1 Step -1
    TEN = Mid(path, i, 1)
    If Mid(path, i, 1) = "\" Then
        get_Foldername_ofpath = Mid(path, 1, i - 1)
        Exit For
    End If
Next
End Function
Function get_Name_offile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Name_offile = Mid(Tenfile, 1, i - 1)
        Exit For
    End If
Next
End Function




